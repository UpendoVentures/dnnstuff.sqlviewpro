ALTER TABLE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_Report]
ALTER COLUMN [ReportHeaderText] [nvarchar](4000) NOT NULL
GO

ALTER TABLE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_Report]
ALTER COLUMN [ReportFooterText] [nvarchar](4000) NOT NULL
GO

ALTER TABLE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_ReportSet]
ALTER COLUMN [ReportSetHeaderText] [nvarchar](4000) NOT NULL
GO

ALTER TABLE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_ReportSet]
ALTER COLUMN [ReportSetFooterText] [nvarchar](4000) NOT NULL
GO

ALTER TABLE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_ReportSet]
ADD [ParameterLayout] [nvarchar](4000) NOT NULL DEFAULT ((''))
GO


ALTER PROCEDURE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_UpdateReport]
(
@ReportSetId int,
@ReportId int,
@ReportTypeId nvarchar(20),
@ReportName nvarchar(100),
@ReportTheme nvarchar(50),
@ReportConnectionId int,
@ReportHeaderText nvarchar(4000),
@ReportFooterText nvarchar(4000),
@ReportCommand text,
@ReportConfig text,
@ReportOrder int,
@ReportDrilldownReportId int,
@ReportDrilldownFieldname nvarchar(100),
@ReportNoItemsText nvarchar(500)
)

AS

DECLARE @MaxOrder int

if exists(select ReportId from {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_Report] where ReportId = @ReportId)

begin
	update {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_Report] SET 
		ReportSetId = @ReportSetId,
		ReportTypeId = @ReportTypeId,
		ReportName = @ReportName,
		ReportTheme = @ReportTheme,
		ReportConnectionId = @ReportConnectionId,
		ReportHeaderText = @ReportHeaderText,
		ReportFooterText = @ReportFooterText,
		ReportCommand = @ReportCommand,
		ReportConfig = @ReportConfig,
		ReportDrilldownReportId = @ReportDrilldownReportId,
		ReportDrilldownFieldname = @ReportDrilldownFieldname,
		ReportNoItemsText = @ReportNoItemsText

	where ReportId = @ReportId

	select @ReportId
end

else

begin

	-- grab order
	SET @MaxOrder = (SELECT IsNull(Max(ReportOrder),0) FROM {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_Report] WHERE ReportSetId = @ReportSetId)

	insert into {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_Report]
		(ReportSetId, ReportTypeId, ReportName, ReportTheme, ReportConnectionId, ReportHeaderText, ReportFooterText, ReportCommand, ReportConfig, ReportOrder, ReportDrilldownReportId, ReportDrilldownFieldname, ReportNoItemsText)
	values
		(@ReportSetId, @ReportTypeId, @ReportName, @ReportTheme, @ReportConnectionId, @ReportHeaderText, @ReportFooterText, @ReportCommand, @ReportConfig, @MaxOrder, @ReportDrilldownReportId, @ReportDrilldownFieldname, @ReportNoItemsText)

	select SCOPE_IDENTITY()
end
GO

ALTER PROCEDURE {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_UpdateReportSet]
(
@ModuleId int,
@ReportSetId int,
@ReportSetName nvarchar(100),
@ReportSetTheme nvarchar(50),
@ReportSetConnectionId int,
@ReportSetHeaderText nvarchar(4000),
@ReportSetFooterText nvarchar(4000),
@ReportSetDebug bit,
@RunCaption nvarchar(200),
@BackCaption nvarchar(200),
@ParameterLayout nvarchar(4000)
)

AS

if exists(select ReportSetId from {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_ReportSet] where ReportSetId = @ReportSetId)

	begin
		update {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_ReportSet] SET 
			ModuleId = @ModuleId,
			ReportSetName = @ReportSetName,
			ReportSetTheme = @ReportSetTheme,
			ReportSetConnectionId = @ReportSetConnectionId,
			ReportSetHeaderText = @ReportSetHeaderText,
			ReportSetFooterText = @ReportSetFooterText,
			ReportSetDebug = @ReportSetDebug,
			RunCaption = @RunCaption,
			BackCaption = @BackCaption,
			ParameterLayout = @ParameterLayout
		where ReportSetId = @ReportSetId
	
		select @ReportSetId
	end

else

begin

	insert into {databaseOwner}[{objectQualifier}DNNStuff_SqlViewPro_ReportSet]
		(ModuleId, ReportSetName, ReportSetTheme, ReportSetConnectionId, ReportSetHeaderText, ReportSetFooterText, ReportSetDebug, RunCaption, BackCaption, ParameterLayout)
	values
		(@ModuleId, @ReportSetName, @ReportSetTheme, @ReportSetConnectionId, @ReportSetHeaderText, @ReportSetFooterText, @ReportSetDebug, @RunCaption, @BackCaption, @ParameterLayout)

	select SCOPE_IDENTITY()
end

