-- MODULE         : DNNSTUFF - SQLVIEWPRO - DNN3
-- VERSION        : 03.00.00
-- 01/APR/2006    : ORIGINAL VERSION

/*
TABLES
*/

CREATE TABLE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection (
	[ConnectionId] [int] IDENTITY (1, 1) NOT NULL ,
	[ConnectionName] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ConnectionString] [nvarchar] (2000) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[PortalId] [int] NOT NULL ,
	CONSTRAINT [PK_DNNStuff_SqlViewPro_Connection] PRIMARY KEY  CLUSTERED 
	(
		[ConnectionId]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


CREATE TABLE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter (
	[ParameterId] [int] IDENTITY (1, 1) NOT NULL ,
	[ReportSetId] [int] NOT NULL ,
	[ParameterName] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ParameterCaption] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ParameterTypeId] [int] NOT NULL ,
	[ParameterConfig] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ParameterOrder] [int] NOT NULL CONSTRAINT [DF_DNNStuff_SqlViewPro_Parameter_ParameterOrder] DEFAULT (0),
	[ParameterConnectionId] [int] NULL ,
	[ParameterCommand] [text] COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	CONSTRAINT [PK_DNNStuff_SqlViewPro_Parameter] PRIMARY KEY  CLUSTERED 
	(
		[ParameterId]
	)  ON [PRIMARY] 
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


CREATE TABLE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType (
	[ParameterTypeId] [int] IDENTITY (1, 1) NOT NULL ,
	[ParameterTypeName] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ParameterTypeSettingsControlSrc] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ParameterTypeControlSrc] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	CONSTRAINT [PK_DNNStuff_SqlViewPro_ParameterType] PRIMARY KEY  CLUSTERED 
	(
		[ParameterTypeId]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


CREATE TABLE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report (
	[ReportId] [int] IDENTITY (1, 1) NOT NULL ,
	[ReportSetId] [int] NOT NULL ,
	[ReportTypeId] [int] NOT NULL ,
	[ReportName] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportTheme] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportConnectionId] [int] NOT NULL ,
	[ReportHeaderText] [nvarchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportFooterText] [nvarchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportCommand] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportConfig] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportOrder] [int] NOT NULL CONSTRAINT [DF_{databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report_ReportOrder] DEFAULT (0),
	CONSTRAINT [PK_DNNStuff_SqlViewPro_Report] PRIMARY KEY  CLUSTERED 
	(
		[ReportId]
	)  ON [PRIMARY] 
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


CREATE TABLE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet (
	[ReportSetId] [int] IDENTITY (1, 1) NOT NULL ,
	[PortalId] [int] NOT NULL ,
	[ReportSetName] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportSetTheme] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportSetHeaderText] [nvarchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportSetFooterText] [nvarchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportSetConnectionId] [int] NOT NULL ,
	[ReportSetDebug] [bit] NOT NULL ,
	CONSTRAINT [PK_DNNStuff_SqlViewPro_ReportSet] PRIMARY KEY  CLUSTERED 
	(
		[ReportSetId]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


CREATE TABLE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType (
	[ReportTypeId] [int] IDENTITY (1, 1) NOT NULL ,
	[ReportTypeName] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportTypeControlSrc] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[ReportTypeSettingsControlSrc] [nvarchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	CONSTRAINT [PK_DNNStuff_SqlViewPro_ReportType] PRIMARY KEY  CLUSTERED 
	(
		[ReportTypeId]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

/*
POPULATE TABLES
*/

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType ON

INSERT INTO {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType (
	[ParameterTypeId],
	[ParameterTypeName],
	[ParameterTypeSettingsControlSrc],
	[ParameterTypeControlSrc]
)
	SELECT 1, 'TextBox', 'Parameters/StandardParameters/ParameterSettings/DefaultParameterSettingsControl.ascx', 'Parameters/StandardParameters/Parameter/DefaultParameterControl.ascx' UNION
	SELECT 2, 'CheckBox', 'Parameters/StandardParameters/ParameterSettings/CheckBoxParameterSettingsControl.ascx', 'Parameters/StandardParameters/Parameter/CheckBoxParameterControl.ascx' UNION
	SELECT 3, 'DropDownList', 'Parameters/StandardParameters/ParameterSettings/DropDownListParameterSettingsControl.ascx', 'Parameters/StandardParameters/Parameter/DropDownListParameterControl.ascx' UNION
	SELECT 4, 'RadioButtonList', 'Parameters/StandardParameters/ParameterSettings/FlowListParameterSettingsControl.ascx', 'Parameters/StandardParameters/Parameter/RadioButtonListParameterControl.ascx' UNION
	SELECT 5, 'ListBox', 'Parameters/StandardParameters/ParameterSettings/DropDownListParameterSettingsControl.ascx', 'Parameters/StandardParameters/Parameter/ListBoxParameterControl.ascx' UNION
	SELECT 6, 'CheckBoxList', 'Parameters/StandardParameters/ParameterSettings/FlowListParameterSettingsControl.ascx', 'Parameters/StandardParameters/Parameter/CheckBoxListParameterControl.ascx'

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType OFF

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType ON

INSERT INTO {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType (
	[ReportTypeId],
	[ReportTypeName],
	[ReportTypeControlSrc],
	[ReportTypeSettingsControlSrc]
)
	SELECT 1, 'Grid', 'Reports/StandardReports/Report/GridReportControl.ascx', 'Reports/StandardReports/ReportSettings/GridReportSettingsControl.ascx' UNION
	SELECT 2, 'Xml/Xsl', 'Reports/StandardReports/Report/XmlReportControl.ascx', 'Reports/StandardReports/ReportSettings/XmlReportSettingsControl.ascx'

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType OFF

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection ON

INSERT INTO {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection (
	[ConnectionId],
	[ConnectionName],
	[ConnectionString],
	[PortalId]
)
	SELECT 1, 'Northwind', 'Provider=sqloledb;Server=(local);Database=Northwind;UID=sa;Pwd=sa;', 0 UNION
	SELECT 2, 'Pubs', 'Provider=sqloledb;Server=(local);Database=Pubs;UID=sa;Pwd=sa', 0

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection OFF

/*
STORED PROCEDURES
*/

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_DeleteConnection
(
@ConnectionId int
)

AS

DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection WHERE ConnectionId = @ConnectionId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_DeleteConnectionOK
(
@ConnectionId int
)
 AS

DECLARE @DeleteOK bit
SET @DeleteOK = 1


if exists(select * from DNN_DNNStuff_SqlViewPro_Parameter
	WHERE ParameterConnectionId = @ConnectionId)
	SET @DeleteOK = 0

if exists(select * from DNN_DNNStuff_SqlViewPro_Report
	WHERE ReportConnectionId = @ConnectionId)
	SET @DeleteOK = 0

SELECT @DeleteOK
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_DeleteParameter
(
@ParameterId int
)

AS

DECLARE @CurrentOrder int
DECLARE @ReportSetId int

-- grab current order, reportset
select @ReportSetId=ReportSetId, @CurrentOrder=ParameterOrder from {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Parameter where  ParameterId = @ParameterId


DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter WHERE ParameterId = @ParameterId

-- reshuffle order
update {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter set ParameterOrder = ParameterOrder-1 WHERE ReportSetId = @ReportSetId and ParameterOrder > @CurrentOrder


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_DeleteReport
(
@ReportId int
)

AS
DECLARE @CurrentOrder int
DECLARE @ReportSetId int

-- grab current order, reportset
select @ReportSetId=ReportSetId, @CurrentOrder=ReportOrder from {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Report where  ReportId = @ReportId


DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report WHERE ReportId = @ReportId

-- reshuffle order
update {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report set ReportOrder = ReportOrder-1 WHERE ReportSetId = @ReportSetId and ReportOrder > @CurrentOrder


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_DeleteReportSet
(
@ReportSetId int
)

AS

BEGIN TRANSACTION

DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report WHERE ReportSetId = @ReportSetId

DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter WHERE ReportSetId = @ReportSetId

DELETE FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet WHERE ReportSetId = @ReportSetId

COMMIT TRANSACTION

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO




CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetConnection
(
@ConnectionId int
)

AS

SELECT * FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection WHERE ConnectionId = @ConnectionId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetParameter
(
@ParameterId int
)

AS

SELECT P.*, PT.ParameterTypeName, PT.ParameterTypeSettingsControlSrc, PT.ParameterTypeControlSrc, C.ConnectionString ParameterConnectionString  FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter P 
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType PT ON PT.ParameterTypeId = P.ParameterTypeId
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = P.ParameterConnectionId
WHERE P.ParameterId = @ParameterId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO




CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetParameterType
(
@ParameterTypeId int
)

AS

SELECT * FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType WHERE ParameterTypeId = @ParameterTypeId



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetReport
(
@ReportId int
)

AS

SELECT R.*, RT.ReportTypeName, RT.ReportTypeSettingsControlSrc, RT.ReportTypeControlSrc, C.ConnectionString ReportConnectionString FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report R 
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType RT ON RT.ReportTypeId = R.ReportTypeId
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = R.ReportConnectionId
WHERE R.ReportId = @ReportId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetReportSet
(
@ReportSetId int
)

AS

SELECT RS.*, C.ConnectionString ReportSetConnectionString FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet RS
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = RS.ReportSetConnectionId
 WHERE ReportSetId = @ReportSetId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetReportSetParameter
(
@ReportSetId int
)

AS

SELECT P.*, PT.ParameterTypeName, PT.ParameterTypeSettingsControlSrc, PT.ParameterTypeControlSrc, C.ConnectionString ParameterConnectionString FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter P 
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType PT ON PT.ParameterTypeId = P.ParameterTypeId
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = P.ParameterConnectionId
WHERE P.ReportSetId = @ReportSetId
ORDER BY P.ParameterOrder

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetReportSetReport
(
@ReportSetId int
)

AS

SELECT R.*,RT.ReportTypeName, RT.ReportTypeSettingsControlSrc, RT.ReportTypeControlSrc, C.ConnectionString ReportConnectionString FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report R
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType RT ON R.ReportTypeId = RT.ReportTypeId
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = R.ReportConnectionId
WHERE ReportSetId = @ReportSetId
ORDER BY ReportOrder

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_GetReportType
(
@ReportTypeId int
)

AS


SELECT * FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType WHERE ReportTypeId = @ReportTypeId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO




CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ListConnection
(
@PortalId As int
)
AS

SELECT *,
(SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter WHERE ParameterConnectionId = ConnectionId) UsedInParameterCount,
(SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report WHERE ReportConnectionId = ConnectionId) UsedInReportCount,
(SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet WHERE ReportSetConnectionId = ConnectionId) UsedInReportSetCount
 FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection where PortalId = @PortalId
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ListParameter
(
@PortalId int
)

AS

SELECT P.*, PT.ParameterTypeName, PT.ParameterTypeSettingsControlSrc, PT.ParameterTypeControlSrc, C.ConnectionString ParameterConnectionString  FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter P 
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType PT ON PT.ParameterTypeId = P.ParameterTypeId
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = P.ParameterConnectionId
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet RS ON RS.ReportSetId = P.ReportSetId
WHERE RS.PortalId = @PortalId
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO




CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ListParameterType

AS

SELECT * FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ParameterType



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ListReport
(
@PortalId int
)

AS

SELECT R.*, RT.ReportTypeName, RT.ReportTypeSettingsControlSrc, RT.ReportTypeControlSrc, C.ConnectionString ReportConnectionString FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report R 
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType RT ON RT.ReportTypeId = R.ReportTypeId
LEFT JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection C ON C.ConnectionId = R.ReportConnectionId
INNER JOIN {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet RS ON RS.ReportSetId = R.ReportSetId
WHERE RS.PortalId = @PortalId
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ListReportSet
(
@PortalId int
)

AS

SELECT *, 
(SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report WHERE ReportSetId = RS.ReportSetId) AS ReportCount ,
(SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter WHERE ReportSetId = RS.ReportSetId) AS ParameterCount 
FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet RS
	WHERE PortalId = @PortalId

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ListReportType

AS

SELECT * FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportType


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_UpdateConnection
(
@PortalId int,
@ConnectionId int,
@ConnectionName nvarchar(100),
@ConnectionString nvarchar(2000)
)

AS

if exists(select ConnectionId from {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection where ConnectionId = @ConnectionId)

begin
	update {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection SET 
		PortalId = @PortalId,
		ConnectionName = @ConnectionName,
		ConnectionString = @ConnectionString
	where ConnectionId = @ConnectionId

	select @ConnectionId
end

else
begin
	if (@ConnectionId > -1)
		begin
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection ON

			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection
				(PortalId, ConnectionId, ConnectionName, ConnectionString)
			values
				(@PortalId, @ConnectionId, @ConnectionName, @ConnectionString)
		
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection OFF

			select @ConnectionId

		end
	else
		begin
			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Connection
				(PortalId, ConnectionName, ConnectionString)
			values
				(@PortalId, @ConnectionName, @ConnectionString)
		
			select SCOPE_IDENTITY()
		end
end
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_UpdateParameter
(
@ReportSetId int,
@ParameterId int,
@ParameterName nvarchar(50),
@ParameterCaption nvarchar(100),
@ParameterTypeId int,
@ParameterCommand ntext,
@ParameterConnectionId int,
@ParameterConfig ntext,
@ParameterOrder int
)

AS

DECLARE @MaxOrder int

if exists(select ParameterId from {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter where ParameterId = @ParameterId)

begin
	update {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter SET 
		ReportSetId = @ReportSetId,
		ParameterName = @ParameterName,
		ParameterCaption = @ParameterCaption,
		ParameterTypeId = @ParameterTypeId,
		ParameterCommand = @ParameterCommand,
		ParameterConnectionId = @ParameterConnectionId,
		ParameterConfig = @ParameterConfig
	where ParameterId = @ParameterId

	select @ParameterId
end

else

begin
	if (@ParameterId > -1)
		begin
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter ON

			-- grab order
			SET @MaxOrder = (SELECT IsNull(Max(ParameterOrder),0) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter WHERE ReportSetId = @ReportSetId)

			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter
				(ParameterId, ReportSetId, ParameterName, ParameterCaption, ParameterTypeId, ParameterCommand, ParameterConnectionId, ParameterConfig, ParameterOrder)
			values
				(@ParameterId, @ReportSetId, @ParameterName, @ParameterCaption, @ParameterTypeId, @ParameterCommand, @ParameterConnectionId, @ParameterConfig, @ParameterOrder)
		
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter OFF

			select @ParameterId


		end
	else
		begin
			-- grab order
			SET @MaxOrder = (SELECT IsNull(Max(ParameterOrder),0) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter WHERE ReportSetId = @ReportSetId)
		
			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Parameter
				(ReportSetId, ParameterName, ParameterCaption, ParameterTypeId, ParameterCommand, ParameterConnectionId, ParameterConfig, ParameterOrder)
			values
				(@ReportSetId, @ParameterName, @ParameterCaption, @ParameterTypeId, @ParameterCommand, @ParameterConnectionId, @ParameterConfig, @MaxOrder+1)
		
			select SCOPE_IDENTITY()
		end
end
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO



CREATE procedure {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_UpdateParameterOrder
(
@ParameterId  int,
@Increment int
)
as

declare @CurrentOrder int
declare @ReportSetId int

-- grab current order, reportset
select @ReportSetId=ReportSetId, @CurrentOrder=ParameterOrder from {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Parameter where  ParameterId = @ParameterId

-- update the parameter we're replacing
update {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Parameter
set    ParameterOrder = @CurrentOrder
where  ReportSetId = @ReportSetId and ParameterOrder = @CurrentOrder+@Increment

-- update the parameter we are setting
update {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Parameter
set    ParameterOrder = ParameterOrder + @Increment
where  ParameterId = @ParameterId


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_UpdateReport
(
@ReportSetId int,
@ReportId int,
@ReportTypeId int,
@ReportName nvarchar(100),
@ReportTheme nvarchar(50),
@ReportConnectionId int,
@ReportHeaderText nvarchar(200),
@ReportFooterText nvarchar(200),
@ReportCommand text,
@ReportConfig text,
@ReportOrder int
)

AS

DECLARE @MaxOrder int

if exists(select ReportId from {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report where ReportId = @ReportId)

begin
	update {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report SET 
		ReportSetId = @ReportSetId,
		ReportTypeId = @ReportTypeId,
		ReportName = @ReportName,
		ReportTheme = @ReportTheme,
		ReportConnectionId = @ReportConnectionId,
		ReportHeaderText = @ReportHeaderText,
		ReportFooterText = @ReportFooterText,
		ReportCommand = @ReportCommand,
		ReportConfig = @ReportConfig
	where ReportId = @ReportId

	select @ReportId
end

else

begin

	if (@ReportId > -1)
		begin
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report ON

			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report
				(ReportId, ReportSetId, ReportTypeId, ReportName, ReportTheme, ReportConnectionId, ReportHeaderText, ReportFooterText, ReportCommand, ReportConfig, ReportOrder)
			values
				(@ReportId, @ReportSetId, @ReportTypeId, @ReportName, @ReportTheme, @ReportConnectionId, @ReportHeaderText, @ReportFooterText, @ReportCommand, @ReportConfig, @ReportOrder)
		
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report OFF

			select @ReportId

		end
	else
		begin

			-- grab order
			SET @MaxOrder = (SELECT IsNull(Max(ReportOrder),0) FROM {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report WHERE ReportSetId = @ReportSetId)

			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_Report
				(ReportSetId, ReportTypeId, ReportName, ReportTheme, ReportConnectionId, ReportHeaderText, ReportFooterText, ReportCommand, ReportConfig, ReportOrder)
			values
				(@ReportSetId, @ReportTypeId, @ReportName, @ReportTheme, @ReportConnectionId, @ReportHeaderText, @ReportFooterText, @ReportCommand, @ReportConfig, @MaxOrder)
		
			select SCOPE_IDENTITY()
		end
end
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE procedure {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_UpdateReportOrder
(
@ReportId  int,
@Increment int
)
as

declare @CurrentOrder int
declare @ReportSetId int

-- grab current order, reportset
select @ReportSetId=ReportSetId, @CurrentOrder=ReportOrder from {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Report where  ReportId = @ReportId

-- update the Report we're replacing
update {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Report
set    ReportOrder = @CurrentOrder
where  ReportSetId = @ReportSetId and ReportOrder = @CurrentOrder+@Increment

-- update the Report we are setting
update {databaseOwner}{objectQualifier}DNNStuff_SQLViewPro_Report
set    ReportOrder = ReportOrder + @Increment
where  ReportId = @ReportId


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO



CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_UpdateReportSet
(
@PortalId int,
@ReportSetId int,
@ReportSetName nvarchar(100),
@ReportSetTheme nvarchar(50),
@ReportSetConnectionId int,
@ReportSetHeaderText nvarchar(200),
@ReportSetFooterText nvarchar(200),
@ReportSetDebug bit
)

AS

if exists(select ReportSetId from {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet where ReportSetId = @ReportSetId)

	begin
		update {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet SET 
			PortalId = @PortalId,
			ReportSetName = @ReportSetName,
			ReportSetTheme = @ReportSetTheme,
			ReportSetConnectionId = @ReportSetConnectionId,
			ReportSetHeaderText = @ReportSetHeaderText,
			ReportSetFooterText = @ReportSetFooterText,
			ReportSetDebug = @ReportSetDebug
		where ReportSetId = @ReportSetId
	
		select @ReportSetId
	end

else

begin

	if (@ReportSetId > -1)
		begin
		
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet ON
			
			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet
				(PortalId, ReportSetId, ReportSetName, ReportSetTheme, ReportSetConnectionId, ReportSetHeaderText, ReportSetFooterText, ReportSetDebug)
			values
				(@PortalId, @ReportSetId, @ReportSetName, @ReportSetTheme, @ReportSetConnectionId, @ReportSetHeaderText, @ReportSetFooterText, @ReportSetDebug)
		
			SET IDENTITY_INSERT {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet OFF
		
			select @ReportSetId
		end
	else
		begin
			insert into {databaseOwner}{objectQualifier}DNNStuff_SqlViewPro_ReportSet
				(PortalId, ReportSetName, ReportSetTheme, ReportSetConnectionId, ReportSetHeaderText, ReportSetFooterText, ReportSetDebug)
			values
				(@PortalId, @ReportSetName, @ReportSetTheme, @ReportSetConnectionId, @ReportSetHeaderText, @ReportSetFooterText, @ReportSetDebug)
		
			select SCOPE_IDENTITY()
		end
end
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

